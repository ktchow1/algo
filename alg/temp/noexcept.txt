When it comes to move semantics and copy semantics, why do we 
* use noexcept for move constructors and move assignment
* but not      for copy constructors and copy assignment?


1. move semantics is transfer ownership of resources efficiently without deep copying or allocating 
* it is low cost
* it is low risk
* hence usually no need to throw exception to handle 

2. avoid fallback to copy semantics, for example
* std::vector<T> implement its move semantic with noexcept
  std::vector<T> implement its copy semantic with throwing exception in allocation error
* if the move semantics of T does not declare noexcept, the move semantics of std::vector<T> will fallback to copy, which is :
  unexpectedly expensive and
  unexpectedly high risk


